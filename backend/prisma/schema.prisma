generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  firstName String
  lastName String
  password String
  organizations Organization[]
  feedback Feedback[]
  comments Comment[]
  role Role @default(MEMBER)
}

model Organization {
  id String @id @default(uuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users User[]
  boards Board[]
}

model Board {
  id String @id @default(uuid())
  title String
  description String
  organization Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  feedback Feedback[]
}

model Feedback {
  id String @id @default(uuid())
  title String
  description String
  status Status @default(OPEN)
  votes Int @default(0)
  hasVoted Boolean @default(false)
  author User @relation(fields: [authorId], references: [id])
  authorId String
  board Board @relation(fields: [boardId], references: [id])
  boardId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments Comment[]
}

model Comment {
  id String @id @default(uuid())
  content String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  feedback Feedback @relation(fields: [feedbackId], references: [id])
  feedbackId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

enum Status {
  OPEN
  IN_PROGRESS
  COMPLETED
  CLOSED
}

enum Role {
  ADMIN
  MEMBER
}